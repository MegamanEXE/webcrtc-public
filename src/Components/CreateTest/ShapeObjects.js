/** 
 These are the objects that are directly used in the creation functions as is
 as opposed to ShapesData.js which basically defines some traits as constants which are then
 used in multiple places as necessary.
 These used to exist solely in Matrix.js but then the exact format was needed in ToolBox.js
 to handle clicks. To avoid copy-pasting, I put them here in this file so both Matrix.js and Toolbox.js
 can share a central description of the shapes. The createSquare() etc. functions could not be decoupled
 because they relied upon setShapes, matrixNumber which would be hellish to maintain without a global state
 solution.
 The respective functions using these MUST manually add id:nanoid() and the x/y coordinates using the spread operator

 In the IDE, open tabs in the order: ShapeObjects > Toolbox > Matrix > GenericShape for easier insertions
 **/

import { DEFAULTS, SHAPE_TYPES } from "./ShapesData";

//v2.0: is now an object. The [...] evaluate the constant's values
export const ShapeObject = {
  [SHAPE_TYPES.VERTICAL_LINE]: {
    type: SHAPE_TYPES.VERTICAL_LINE,
    stroke: DEFAULTS.VERTICAL_LINE.STROKE,
    strokeWidth: DEFAULTS.VERTICAL_LINE.STROKE_WIDTH,
    dash: DEFAULTS.VERTICAL_LINE.DASH,
    rotation: DEFAULTS.VERTICAL_LINE.ROTATION,
    points: [0, 0, 0, DEFAULTS.VERTICAL_LINE.HEIGHT],

    offsetY: DEFAULTS.VERTICAL_LINE.HEIGHT / 2,
  },

  [SHAPE_TYPES.TILTED_LINE]: {
    type: SHAPE_TYPES.TILTED_LINE,
    stroke: DEFAULTS.TILTED_LINE.STROKE,
    strokeWidth: DEFAULTS.TILTED_LINE.STROKE_WIDTH,
    dash: DEFAULTS.TILTED_LINE.DASH,
    rotation: DEFAULTS.TILTED_LINE.ROTATION,
    points: [0, 0, 0, DEFAULTS.TILTED_LINE.HEIGHT],

    offsetX: -DEFAULTS.TILTED_LINE.HEIGHT / 3,
    offsetY: DEFAULTS.TILTED_LINE.HEIGHT / 2.
  },

  [SHAPE_TYPES.C_LINE]: {
    type: SHAPE_TYPES.C_LINE,
    width: DEFAULTS.C_LINE.WIDTH,
    height: DEFAULTS.C_LINE.HEIGHT,
    stroke: DEFAULTS.C_LINE.STROKE,
    strokeWidth: DEFAULTS.C_LINE.STROKE_WIDTH,
    dash: DEFAULTS.C_LINE.DASH,
    rotation: DEFAULTS.C_LINE.ROTATION,

    offsetY: DEFAULTS.C_LINE.HEIGHT / 2,
  },

  [SHAPE_TYPES.S_LINE]: {
    type: SHAPE_TYPES.S_LINE,
    width: DEFAULTS.S_LINE.WIDTH,
    height: DEFAULTS.S_LINE.HEIGHT,
    stroke: DEFAULTS.S_LINE.STROKE,
    strokeWidth: DEFAULTS.S_LINE.STROKE_WIDTH,
    dash: DEFAULTS.S_LINE.DASH,
    rotation: DEFAULTS.S_LINE.ROTATION,

    offsetX: DEFAULTS.S_LINE.WIDTH / 2,
    offsetY: DEFAULTS.S_LINE.HEIGHT / 2,
  },

  [SHAPE_TYPES.EIGHT_LINE]: {
    type: SHAPE_TYPES.EIGHT_LINE,
    width: DEFAULTS.EIGHT_LINE.WIDTH,
    height: DEFAULTS.EIGHT_LINE.HEIGHT,
    stroke: DEFAULTS.EIGHT_LINE.STROKE,
    strokeWidth: DEFAULTS.EIGHT_LINE.STROKE_WIDTH,
    dash: DEFAULTS.EIGHT_LINE.DASH,
    rotation: DEFAULTS.EIGHT_LINE.ROTATION,

    offsetX: DEFAULTS.EIGHT_LINE.WIDTH / 2,
    offsetY: DEFAULTS.EIGHT_LINE.HEIGHT / 2.
  },

  // RECT
  [SHAPE_TYPES.SQUARE]: {
    type: SHAPE_TYPES.SQUARE,
    width: DEFAULTS.SQUARE.WIDTH,
    height: DEFAULTS.SQUARE.HEIGHT,
    fill: DEFAULTS.SQUARE.FILL,
    stroke: DEFAULTS.SQUARE.STROKE,
    strokeWidth: DEFAULTS.SQUARE.STROKE_WIDTH,
    dash: DEFAULTS.SQUARE.DASH,
    rotation: DEFAULTS.SQUARE.ROTATION,

    offsetX: DEFAULTS.SQUARE.WIDTH / 2,
    offsetY: DEFAULTS.SQUARE.HEIGHT / 2,
  },

  [SHAPE_TYPES.DIAMOND]: {
    type: SHAPE_TYPES.DIAMOND,
    width: DEFAULTS.DIAMOND.WIDTH,
    height: DEFAULTS.DIAMOND.HEIGHT,
    fill: DEFAULTS.DIAMOND.FILL,
    stroke: DEFAULTS.DIAMOND.STROKE,
    strokeWidth: DEFAULTS.DIAMOND.STROKE_WIDTH,
    dash: DEFAULTS.DIAMOND.DASH,
    rotation: DEFAULTS.DIAMOND.ROTATION,

    offsetX: DEFAULTS.DIAMOND.WIDTH / 2,
    offsetY: DEFAULTS.DIAMOND.HEIGHT / 2,
  },

  [SHAPE_TYPES.TALL_FAT_RECT]: {
    type: SHAPE_TYPES.TALL_FAT_RECT,
    width: DEFAULTS.TALL_FAT_RECT.WIDTH,
    height: DEFAULTS.TALL_FAT_RECT.HEIGHT,
    fill: DEFAULTS.TALL_FAT_RECT.FILL,
    stroke: DEFAULTS.TALL_FAT_RECT.STROKE,
    strokeWidth: DEFAULTS.TALL_FAT_RECT.STROKE_WIDTH,
    dash: DEFAULTS.TALL_FAT_RECT.DASH,
    rotation: DEFAULTS.TALL_FAT_RECT.ROTATION,

    offsetX: DEFAULTS.TALL_FAT_RECT.WIDTH / 2,
    offsetY: DEFAULTS.TALL_FAT_RECT.HEIGHT / 2,
  },

  [SHAPE_TYPES.TALL_THIN_RECT]: {
    type: SHAPE_TYPES.TALL_THIN_RECT,
    width: DEFAULTS.TALL_THIN_RECT.WIDTH,
    height: DEFAULTS.TALL_THIN_RECT.HEIGHT,
    fill: DEFAULTS.TALL_THIN_RECT.FILL,
    stroke: DEFAULTS.TALL_THIN_RECT.STROKE,
    strokeWidth: DEFAULTS.TALL_THIN_RECT.STROKE_WIDTH,
    dash: DEFAULTS.TALL_THIN_RECT.DASH,
    rotation: DEFAULTS.TALL_THIN_RECT.ROTATION,

    offsetX: DEFAULTS.TALL_THIN_RECT.WIDTH / 2,
    offsetY: DEFAULTS.TALL_THIN_RECT.HEIGHT / 2
  },

  [SHAPE_TYPES.TILTED_RECT]: {
    type: SHAPE_TYPES.TILTED_RECT,
    width: DEFAULTS.TILTED_RECT.WIDTH,
    height: DEFAULTS.TILTED_RECT.HEIGHT,
    fill: DEFAULTS.TILTED_RECT.FILL,
    stroke: DEFAULTS.TILTED_RECT.STROKE,
    strokeWidth: DEFAULTS.TILTED_RECT.STROKE_WIDTH,
    dash: DEFAULTS.TILTED_RECT.DASH,
    rotation: DEFAULTS.TILTED_RECT.ROTATION,
    skewX: DEFAULTS.TILTED_RECT.SKEWX,

    offsetX: DEFAULTS.TILTED_RECT.WIDTH / 2,
    offsetY: DEFAULTS.TILTED_RECT.HEIGHT / 2
  },

  [SHAPE_TYPES.FOLDED_RECT]: {
    type: SHAPE_TYPES.FOLDED_RECT,
    width: DEFAULTS.FOLDED_RECT.WIDTH,
    height: DEFAULTS.FOLDED_RECT.HEIGHT,
    fill: DEFAULTS.FOLDED_RECT.FILL,
    stroke: DEFAULTS.FOLDED_RECT.STROKE,
    strokeWidth: DEFAULTS.FOLDED_RECT.STROKE_WIDTH,
    dash: DEFAULTS.FOLDED_RECT.DASH,
    rotation: DEFAULTS.FOLDED_RECT.ROTATION,

    offsetX: DEFAULTS.FOLDED_RECT.WIDTH / 2,
    offsetY: DEFAULTS.FOLDED_RECT.HEIGHT / 2,
  },

  [SHAPE_TYPES.TALL_RECT]: {
    type: SHAPE_TYPES.TALL_RECT,
    width: DEFAULTS.TALL_RECT.WIDTH,
    height: DEFAULTS.TALL_RECT.HEIGHT,
    fill: DEFAULTS.TALL_RECT.FILL,
    stroke: DEFAULTS.TALL_RECT.STROKE,
    strokeWidth: DEFAULTS.TALL_RECT.STROKE_WIDTH,
    dash: DEFAULTS.TALL_RECT.DASH,
    rotation: DEFAULTS.TALL_RECT.ROTATION,

    offsetX: DEFAULTS.TALL_RECT.WIDTH / 2,
    offsetY: DEFAULTS.TALL_RECT.HEIGHT / 2
  },

  [SHAPE_TYPES.C_RECT]: {
    type: SHAPE_TYPES.C_RECT,
    width: DEFAULTS.C_RECT.WIDTH,
    height: DEFAULTS.C_RECT.HEIGHT,
    fill: DEFAULTS.C_RECT.FILL,
    stroke: DEFAULTS.C_RECT.STROKE,
    strokeWidth: DEFAULTS.C_RECT.STROKE_WIDTH,
    dash: DEFAULTS.C_RECT.DASH,
    rotation: DEFAULTS.C_RECT.ROTATION,

    offsetX: DEFAULTS.C_RECT.WIDTH / 2,
    offsetY: DEFAULTS.C_RECT.HEIGHT/ 2
  },

  [SHAPE_TYPES.TOP_LEFT_RECT]: {
    type: SHAPE_TYPES.TOP_LEFT_RECT,
    width: DEFAULTS.TOP_LEFT_RECT.WIDTH,
    height: DEFAULTS.TOP_LEFT_RECT.HEIGHT,
    fill: DEFAULTS.TOP_LEFT_RECT.FILL,
    stroke: DEFAULTS.TOP_LEFT_RECT.STROKE,
    strokeWidth: DEFAULTS.TOP_LEFT_RECT.STROKE_WIDTH,
    dash: DEFAULTS.TOP_LEFT_RECT.DASH,
    rotation: DEFAULTS.TOP_LEFT_RECT.ROTATION,

    offsetX: DEFAULTS.TOP_LEFT_RECT.WIDTH / 2,
    offsetY: DEFAULTS.TOP_LEFT_RECT.HEIGHT / 2,
  },

  [SHAPE_TYPES.STAR]: {
    type: SHAPE_TYPES.STAR,
    width: DEFAULTS.STAR.WIDTH,
    height: DEFAULTS.STAR.HEIGHT,
    fill: DEFAULTS.STAR.FILL,
    stroke: DEFAULTS.STAR.STROKE,
    strokeWidth: DEFAULTS.STAR.STROKE_WIDTH,
    dash: DEFAULTS.STAR.DASH,
    rotation: DEFAULTS.STAR.ROTATION,

    offsetX: DEFAULTS.C_RECT.WIDTH / 2,
    offsetY: DEFAULTS.C_RECT.HEIGHT/ 2,

  },

  [SHAPE_TYPES.STAR_MEDIUM]: {
    type: SHAPE_TYPES.STAR_MEDIUM,
    width: DEFAULTS.STAR_MEDIUM.WIDTH,
    height: DEFAULTS.STAR_MEDIUM.HEIGHT,
    fill: DEFAULTS.STAR_MEDIUM.FILL,
    stroke: DEFAULTS.STAR_MEDIUM.STROKE,
    strokeWidth: DEFAULTS.STAR_MEDIUM.STROKE_WIDTH,
    dash: DEFAULTS.STAR_MEDIUM.DASH,
    rotation: DEFAULTS.STAR_MEDIUM.ROTATION,

    offsetX: DEFAULTS.STAR_MEDIUM.WIDTH / 2,
    offsetY: DEFAULTS.STAR_MEDIUM.HEIGHT/ 2,
  },

  [SHAPE_TYPES.STAR_THIN]: {
    type: SHAPE_TYPES.STAR_THIN,
    width: DEFAULTS.STAR_THIN.WIDTH,
    height: DEFAULTS.STAR_THIN.HEIGHT,
    fill: DEFAULTS.STAR_THIN.FILL,
    stroke: DEFAULTS.STAR_THIN.STROKE,
    strokeWidth: DEFAULTS.STAR_THIN.STROKE_WIDTH,
    dash: DEFAULTS.STAR_THIN.DASH,
    rotation: DEFAULTS.STAR_THIN.ROTATION,

    offsetX: DEFAULTS.STAR_THIN.WIDTH / 2,
    offsetY: DEFAULTS.STAR_THIN.HEIGHT / 2,
  },

  //CROSS
  [SHAPE_TYPES.PLUS]: {
    type: SHAPE_TYPES.PLUS,
    width: DEFAULTS.PLUS.WIDTH,
    height: DEFAULTS.PLUS.HEIGHT,
    fill: DEFAULTS.PLUS.FILL,
    stroke: DEFAULTS.PLUS.STROKE,
    strokeWidth: DEFAULTS.PLUS.STROKE_WIDTH,
    dash: DEFAULTS.PLUS.DASH,
    rotation: DEFAULTS.PLUS.ROTATION,
    
    offsetX: DEFAULTS.PLUS.WIDTH / 2,
    offsetY: DEFAULTS.PLUS.HEIGHT / 2,
  },

  [SHAPE_TYPES.CROSS]: {
    type: SHAPE_TYPES.CROSS,
    width: DEFAULTS.CROSS.WIDTH,
    height: DEFAULTS.CROSS.HEIGHT,
    fill: DEFAULTS.CROSS.FILL,
    stroke: DEFAULTS.CROSS.STROKE,
    strokeWidth: DEFAULTS.CROSS.STROKE_WIDTH,
    dash: DEFAULTS.CROSS.DASH,
    rotation: DEFAULTS.CROSS.ROTATION,

    offsetX: DEFAULTS.CROSS.WIDTH / 2,
    offsetY: DEFAULTS.CROSS.HEIGHT / 2,
  },

  [SHAPE_TYPES.ORTHOGONAL]: {
    type: SHAPE_TYPES.ORTHOGONAL,
    width: DEFAULTS.ORTHOGONAL.WIDTH,
    height: DEFAULTS.ORTHOGONAL.HEIGHT,
    fill: DEFAULTS.ORTHOGONAL.FILL,
    stroke: DEFAULTS.ORTHOGONAL.STROKE,
    strokeWidth: DEFAULTS.ORTHOGONAL.STROKE_WIDTH,
    dash: DEFAULTS.ORTHOGONAL.DASH,
    rotation: DEFAULTS.ORTHOGONAL.ROTATION,

    offsetX: DEFAULTS.ORTHOGONAL.WIDTH / 2,
    offsetY: DEFAULTS.ORTHOGONAL.HEIGHT / 2,
  },

  //CIRCLES
  [SHAPE_TYPES.CIRCLE]: {
    type: SHAPE_TYPES.CIRCLE,
    radius: DEFAULTS.CIRCLE.RADIUS,
    fill: DEFAULTS.CIRCLE.FILL,
    stroke: DEFAULTS.CIRCLE.STROKE,
    strokeWidth: DEFAULTS.CIRCLE.STROKE_WIDTH,
    dash: DEFAULTS.CIRCLE.DASH,
  },

  [SHAPE_TYPES.SEMICIRCLE]: {
    type: SHAPE_TYPES.SEMICIRCLE,
    width: DEFAULTS.SEMICIRCLE.WIDTH,
    height: DEFAULTS.SEMICIRCLE.HEIGHT,
    fill: DEFAULTS.SEMICIRCLE.FILL,
    stroke: DEFAULTS.SEMICIRCLE.STROKE,
    strokeWidth: DEFAULTS.SEMICIRCLE.STROKE_WIDTH,
    dash: DEFAULTS.SEMICIRCLE.DASH,
    rotation: DEFAULTS.SEMICIRCLE.ROTATION,
    angle: 180,
    innerRadius: 0,
    outerRadius: DEFAULTS.SEMICIRCLE.OUTER_RADIUS,
  },

  [SHAPE_TYPES.C_CIRCLE]: {
    type: SHAPE_TYPES.C_CIRCLE,
    width: DEFAULTS.C_CIRCLE.WIDTH,
    height: DEFAULTS.C_CIRCLE.HEIGHT,
    fill: DEFAULTS.C_CIRCLE.FILL,
    stroke: DEFAULTS.C_CIRCLE.STROKE,
    strokeWidth: DEFAULTS.C_CIRCLE.STROKE_WIDTH,
    dash: DEFAULTS.C_CIRCLE.DASH,
    rotation: DEFAULTS.C_CIRCLE.ROTATION,
    innerRadius: DEFAULTS.C_CIRCLE.RADIUS,
    outerRadius: DEFAULTS.C_CIRCLE.RADIUS,
    angle: 180,
  },

  [SHAPE_TYPES.CIRCLE_20MIN]: {
    type: SHAPE_TYPES.CIRCLE_20MIN,
    width: DEFAULTS.CIRCLE_20MIN.WIDTH,
    height: DEFAULTS.CIRCLE_20MIN.HEIGHT,
    fill: DEFAULTS.CIRCLE_20MIN.FILL,
    stroke: DEFAULTS.CIRCLE_20MIN.STROKE,
    strokeWidth: DEFAULTS.CIRCLE_20MIN.STROKE_WIDTH,
    dash: DEFAULTS.CIRCLE_20MIN.DASH,
    rotation: DEFAULTS.CIRCLE_20MIN.ROTATION,
    innerRadius: 0,
    outerRadius: DEFAULTS.CIRCLE_20MIN.RADIUS,
    angle: 120,
  },

  [SHAPE_TYPES.QUARTER_CIRCLE]: {
    type: SHAPE_TYPES.QUARTER_CIRCLE,
    width: DEFAULTS.QUARTER_CIRCLE.WIDTH,
    height: DEFAULTS.QUARTER_CIRCLE.HEIGHT,
    fill: DEFAULTS.QUARTER_CIRCLE.FILL,
    stroke: DEFAULTS.QUARTER_CIRCLE.STROKE,
    strokeWidth: DEFAULTS.QUARTER_CIRCLE.STROKE_WIDTH,
    dash: DEFAULTS.QUARTER_CIRCLE.DASH,
    rotation: DEFAULTS.QUARTER_CIRCLE.ROTATION,
    innerRadius: 0,
    outerRadius: DEFAULTS.QUARTER_CIRCLE.RADIUS,
    angle: 90,
  },

  [SHAPE_TYPES.CIRCLE_10MIN]: {
    type: SHAPE_TYPES.CIRCLE_10MIN,
    width: DEFAULTS.CIRCLE_10MIN.WIDTH,
    height: DEFAULTS.CIRCLE_10MIN.HEIGHT,
    fill: DEFAULTS.CIRCLE_10MIN.FILL,
    stroke: DEFAULTS.CIRCLE_10MIN.STROKE,
    strokeWidth: DEFAULTS.CIRCLE_10MIN.STROKE_WIDTH,
    dash: DEFAULTS.CIRCLE_10MIN.DASH,
    rotation: DEFAULTS.CIRCLE_10MIN.ROTATION,
    innerRadius: 0,
    outerRadius: DEFAULTS.CIRCLE_10MIN.RADIUS,
    angle: 45,
  },

  [SHAPE_TYPES.ELLIPSE_VERTICAL]: {
    type: SHAPE_TYPES.ELLIPSE_VERTICAL,
    width: DEFAULTS.ELLIPSE_VERTICAL.WIDTH,
    height: DEFAULTS.ELLIPSE_VERTICAL.HEIGHT,
    fill: DEFAULTS.ELLIPSE_VERTICAL.FILL,
    stroke: DEFAULTS.ELLIPSE_VERTICAL.STROKE,
    strokeWidth: DEFAULTS.ELLIPSE_VERTICAL.STROKE_WIDTH,
    dash: DEFAULTS.ELLIPSE_VERTICAL.DASH,
    rotation: DEFAULTS.ELLIPSE_VERTICAL.ROTATION,
    radiusX: DEFAULTS.ELLIPSE_VERTICAL.RADIUS_X,
    radiusY: DEFAULTS.ELLIPSE_VERTICAL.RADIUS_Y,
  },

  [SHAPE_TYPES.ELLIPSE_DIAGONAL]: {
    type: SHAPE_TYPES.ELLIPSE_DIAGONAL,
    width: DEFAULTS.ELLIPSE_DIAGONAL.WIDTH,
    height: DEFAULTS.ELLIPSE_DIAGONAL.HEIGHT,
    fill: DEFAULTS.ELLIPSE_DIAGONAL.FILL,
    stroke: DEFAULTS.ELLIPSE_DIAGONAL.STROKE,
    strokeWidth: DEFAULTS.ELLIPSE_DIAGONAL.STROKE_WIDTH,
    dash: DEFAULTS.ELLIPSE_DIAGONAL.DASH,
    rotation: DEFAULTS.ELLIPSE_DIAGONAL.ROTATION,
    radiusX: DEFAULTS.ELLIPSE_DIAGONAL.RADIUS_X,
    radiusY: DEFAULTS.ELLIPSE_DIAGONAL.RADIUS_Y,
  },

  [SHAPE_TYPES.ELLIPSE_FOLDED]: {
    type: SHAPE_TYPES.ELLIPSE_FOLDED,
    width: DEFAULTS.ELLIPSE_FOLDED.WIDTH,
    height: DEFAULTS.ELLIPSE_FOLDED.HEIGHT,
    fill: DEFAULTS.ELLIPSE_FOLDED.FILL,
    stroke: DEFAULTS.ELLIPSE_FOLDED.STROKE,
    strokeWidth: DEFAULTS.ELLIPSE_FOLDED.STROKE_WIDTH,
    dash: DEFAULTS.ELLIPSE_FOLDED.DASH,
    rotation: DEFAULTS.ELLIPSE_FOLDED.ROTATION,
    radiusX: DEFAULTS.ELLIPSE_FOLDED.RADIUS_X,
    radiusY: DEFAULTS.ELLIPSE_FOLDED.RADIUS_Y,

    offsetY: DEFAULTS.ELLIPSE_FOLDED.HEIGHT / 2,
  },

  //TRIANGLES
  [SHAPE_TYPES.SIMPLE_TRI]: {
    type: SHAPE_TYPES.SIMPLE_TRI,
    width: DEFAULTS.SIMPLE_TRI.WIDTH,
    height: DEFAULTS.SIMPLE_TRI.HEIGHT,
    fill: DEFAULTS.SIMPLE_TRI.FILL,
    stroke: DEFAULTS.SIMPLE_TRI.STROKE,
    strokeWidth: DEFAULTS.SIMPLE_TRI.STROKE_WIDTH,
    dash: DEFAULTS.SIMPLE_TRI.DASH,

    offsetX: DEFAULTS.SIMPLE_TRI.WIDTH / 2,
    offsetY: DEFAULTS.SIMPLE_TRI.HEIGHT / 2,
  },

  [SHAPE_TYPES.SIMPLE_TRI_SMALL]: {
    type: SHAPE_TYPES.SIMPLE_TRI_SMALL,
    width: DEFAULTS.SIMPLE_TRI_SMALL.WIDTH,
    height: DEFAULTS.SIMPLE_TRI_SMALL.HEIGHT,
    fill: DEFAULTS.SIMPLE_TRI_SMALL.FILL,
    stroke: DEFAULTS.SIMPLE_TRI_SMALL.STROKE,
    strokeWidth: DEFAULTS.SIMPLE_TRI_SMALL.STROKE_WIDTH,
    dash: DEFAULTS.SIMPLE_TRI_SMALL.DASH,

    offsetX: DEFAULTS.OBTUSE_TRI_SMALL.WIDTH / 2,
    offsetY: DEFAULTS.OBTUSE_TRI_SMALL.HEIGHT / 2,
  },

  [SHAPE_TYPES.SIMPLE_TRI_BIG]: {
    type: SHAPE_TYPES.SIMPLE_TRI_BIG,
    width: DEFAULTS.SIMPLE_TRI_BIG.WIDTH,
    height: DEFAULTS.SIMPLE_TRI_BIG.HEIGHT,
    fill: DEFAULTS.SIMPLE_TRI_BIG.FILL,
    stroke: DEFAULTS.SIMPLE_TRI_BIG.STROKE,
    strokeWidth: DEFAULTS.SIMPLE_TRI_BIG.STROKE_WIDTH,
    dash: DEFAULTS.SIMPLE_TRI_BIG.DASH,

    offsetX: DEFAULTS.SIMPLE_TRI_BIG.WIDTH / 2,
    offsetY: DEFAULTS.SIMPLE_TRI_BIG.HEIGHT / 2,
  },

  [SHAPE_TYPES.SQUASHED_TRI]: {
    type: SHAPE_TYPES.SQUASHED_TRI,
    width: DEFAULTS.SQUASHED_TRI.WIDTH,
    height: DEFAULTS.SQUASHED_TRI.HEIGHT,
    fill: DEFAULTS.SQUASHED_TRI.FILL,
    stroke: DEFAULTS.SQUASHED_TRI.STROKE,
    strokeWidth: DEFAULTS.SQUASHED_TRI.STROKE_WIDTH,
    dash: DEFAULTS.SQUASHED_TRI.DASH,

    offsetX: DEFAULTS.SQUASHED_TRI.WIDTH / 2,
    offsetY: DEFAULTS.SQUASHED_TRI.HEIGHT / 2,
  },

  [SHAPE_TYPES.RIGHT_TRI]: {
    type: SHAPE_TYPES.RIGHT_TRI,
    width: DEFAULTS.RIGHT_TRI.WIDTH,
    height: DEFAULTS.RIGHT_TRI.HEIGHT,
    fill: DEFAULTS.RIGHT_TRI.FILL,
    stroke: DEFAULTS.RIGHT_TRI.STROKE,
    strokeWidth: DEFAULTS.RIGHT_TRI.STROKE_WIDTH,
    dash: DEFAULTS.RIGHT_TRI.DASH,

    offsetX: DEFAULTS.RIGHT_TRI.WIDTH / 2,
    offsetY: DEFAULTS.RIGHT_TRI.HEIGHT / 2,
  },

  [SHAPE_TYPES.RIGHT_TRI_THIN]: {
    type: SHAPE_TYPES.RIGHT_TRI_THIN,
    width: DEFAULTS.RIGHT_TRI_THIN.WIDTH,
    height: DEFAULTS.RIGHT_TRI_THIN.HEIGHT,
    fill: DEFAULTS.RIGHT_TRI_THIN.FILL,
    stroke: DEFAULTS.RIGHT_TRI_THIN.STROKE,
    strokeWidth: DEFAULTS.RIGHT_TRI_THIN.STROKE_WIDTH,
    dash: DEFAULTS.RIGHT_TRI_THIN.DASH,

    offsetX: DEFAULTS.RIGHT_TRI_THIN.WIDTH / 2,
    offsetY: DEFAULTS.RIGHT_TRI_THIN.HEIGHT / 2,
  },

  [SHAPE_TYPES.OBTUSE_TRI_SMALL]: {
    type: SHAPE_TYPES.OBTUSE_TRI_SMALL,
    width: DEFAULTS.OBTUSE_TRI_SMALL.WIDTH,
    height: DEFAULTS.OBTUSE_TRI_SMALL.HEIGHT,
    fill: DEFAULTS.OBTUSE_TRI_SMALL.FILL,
    stroke: DEFAULTS.OBTUSE_TRI_SMALL.STROKE,
    strokeWidth: DEFAULTS.OBTUSE_TRI_SMALL.STROKE_WIDTH,
    dash: DEFAULTS.OBTUSE_TRI_SMALL.DASH,

    offsetX: DEFAULTS.OBTUSE_TRI_SMALL.WIDTH / 2,
    offsetY: DEFAULTS.OBTUSE_TRI_SMALL.HEIGHT / 2,
  },

  [SHAPE_TYPES.OBTUSE_TRI_BIG]: {
    type: SHAPE_TYPES.OBTUSE_TRI_BIG,
    width: DEFAULTS.OBTUSE_TRI_BIG.WIDTH,
    height: DEFAULTS.OBTUSE_TRI_BIG.HEIGHT,
    fill: DEFAULTS.OBTUSE_TRI_BIG.FILL,
    stroke: DEFAULTS.OBTUSE_TRI_BIG.STROKE,
    strokeWidth: DEFAULTS.OBTUSE_TRI_BIG.STROKE_WIDTH,
    dash: DEFAULTS.OBTUSE_TRI_BIG.DASH,

    offsetX: DEFAULTS.OBTUSE_TRI_BIG.WIDTH / 2,
    offsetY: DEFAULTS.OBTUSE_TRI_BIG.HEIGHT / 2,
  },

  [SHAPE_TYPES.OBTUSE_TRI_FOLDED]: {
    type: SHAPE_TYPES.OBTUSE_TRI_FOLDED,
    width: DEFAULTS.OBTUSE_TRI_FOLDED.WIDTH,
    height: DEFAULTS.OBTUSE_TRI_FOLDED.HEIGHT,
    fill: DEFAULTS.OBTUSE_TRI_FOLDED.FILL,
    stroke: DEFAULTS.OBTUSE_TRI_FOLDED.STROKE,
    strokeWidth: DEFAULTS.OBTUSE_TRI_FOLDED.STROKE_WIDTH,
    dash: DEFAULTS.OBTUSE_TRI_FOLDED.DASH,

    offsetX: DEFAULTS.OBTUSE_TRI_FOLDED.WIDTH,
  },

  [SHAPE_TYPES.OBTUSE_TRI_SLIGHT]: {
    type: SHAPE_TYPES.OBTUSE_TRI_SLIGHT,
    width: DEFAULTS.OBTUSE_TRI_SLIGHT.WIDTH,
    height: DEFAULTS.OBTUSE_TRI_SLIGHT.HEIGHT,
    fill: DEFAULTS.OBTUSE_TRI_SLIGHT.FILL,
    stroke: DEFAULTS.OBTUSE_TRI_SLIGHT.STROKE,
    strokeWidth: DEFAULTS.OBTUSE_TRI_SLIGHT.STROKE_WIDTH,
    dash: DEFAULTS.OBTUSE_TRI_SLIGHT.DASH,

    offsetX: DEFAULTS.OBTUSE_TRI_SLIGHT.WIDTH / 2,
    offsetY: DEFAULTS.OBTUSE_TRI_SLIGHT.HEIGHT / 2,
  },

  [SHAPE_TYPES.CONE]: {
    type: SHAPE_TYPES.CONE,
    width: DEFAULTS.CONE.WIDTH,
    height: DEFAULTS.CONE.HEIGHT,
    fill: DEFAULTS.CONE.FILL,
    stroke: DEFAULTS.CONE.STROKE,
    strokeWidth: DEFAULTS.CONE.STROKE_WIDTH,
    dash: DEFAULTS.CONE.DASH,

    offsetX: DEFAULTS.CONE.WIDTH / 2,
    offsetY: DEFAULTS.CONE.HEIGHT / 2,
  },

  //HEXAGONS
  [SHAPE_TYPES.HEXAGON]: {
    type: SHAPE_TYPES.HEXAGON,
    width: DEFAULTS.HEXAGON.WIDTH,
    height: DEFAULTS.HEXAGON.HEIGHT,
    fill: DEFAULTS.HEXAGON.FILL,
    stroke: DEFAULTS.HEXAGON.STROKE,
    strokeWidth: DEFAULTS.HEXAGON.STROKE_WIDTH,
    dash: DEFAULTS.HEXAGON.DASH,

  },

  [SHAPE_TYPES.SEMIHEXAGON]: {
    type: SHAPE_TYPES.SEMIHEXAGON,
    width: DEFAULTS.SEMIHEXAGON.WIDTH,
    height: DEFAULTS.SEMIHEXAGON.HEIGHT,
    fill: DEFAULTS.SEMIHEXAGON.FILL,
    stroke: DEFAULTS.SEMIHEXAGON.STROKE,
    strokeWidth: DEFAULTS.SEMIHEXAGON.STROKE_WIDTH,
    dash: DEFAULTS.SEMIHEXAGON.DASH,

    offsetX: DEFAULTS.SEMIHEXAGON.WIDTH / 2,
    offsetY: DEFAULTS.SEMIHEXAGON.HEIGHT / 2,
  },

  [SHAPE_TYPES.C_HEXAGON]: {
    type: SHAPE_TYPES.C_HEXAGON,
    width: DEFAULTS.C_HEXAGON.WIDTH,
    height: DEFAULTS.C_HEXAGON.HEIGHT,
    fill: DEFAULTS.C_HEXAGON.FILL,
    stroke: DEFAULTS.C_HEXAGON.STROKE,
    strokeWidth: DEFAULTS.C_HEXAGON.STROKE_WIDTH,
    dash: DEFAULTS.C_HEXAGON.DASH,

    offsetX: DEFAULTS.C_HEXAGON.WIDTH / 2,
    offsetY: DEFAULTS.C_HEXAGON.HEIGHT / 2,
  },

  [SHAPE_TYPES.RHOMBUS]: {
    type: SHAPE_TYPES.RHOMBUS,
    width: DEFAULTS.RHOMBUS.WIDTH,
    height: DEFAULTS.RHOMBUS.HEIGHT,
    fill: DEFAULTS.RHOMBUS.FILL,
    stroke: DEFAULTS.RHOMBUS.STROKE,
    strokeWidth: DEFAULTS.RHOMBUS.STROKE_WIDTH,
    dash: DEFAULTS.RHOMBUS.DASH,

    offsetX: DEFAULTS.RHOMBUS.WIDTH / 2,
    offsetY: DEFAULTS.RHOMBUS.HEIGHT / 2,
  },

  //DOTS
  [SHAPE_TYPES.DOT_HOLLOW]: {
    type: SHAPE_TYPES.DOT_HOLLOW,
    width: DEFAULTS.DOT_HOLLOW.WIDTH,
    height: DEFAULTS.DOT_HOLLOW.HEIGHT,
    fill: DEFAULTS.DOT_HOLLOW.FILL,
    stroke: DEFAULTS.DOT_HOLLOW.STROKE,
    strokeWidth: DEFAULTS.DOT_HOLLOW.STROKE_WIDTH,
    dash: DEFAULTS.DOT_HOLLOW.DASH,
    radius: DEFAULTS.DOT_HOLLOW.RADIUS,

    offsetX: DEFAULTS.DOT_HOLLOW.WIDTH / 2,
    offsetY: DEFAULTS.DOT_HOLLOW.HEIGHT / 2,
  },

  [SHAPE_TYPES.DOT_FILLED]: {
    type: SHAPE_TYPES.DOT_FILLED,
    width: DEFAULTS.DOT_FILLED.WIDTH,
    height: DEFAULTS.DOT_FILLED.HEIGHT,
    fill: DEFAULTS.DOT_FILLED.FILL,
    stroke: DEFAULTS.DOT_FILLED.STROKE,
    strokeWidth: DEFAULTS.DOT_FILLED.STROKE_WIDTH,
    dash: DEFAULTS.DOT_FILLED.DASH,
    radius: DEFAULTS.DOT_HOLLOW.RADIUS,

  },

  [SHAPE_TYPES.DOT4_HOLLOW]: {
    type: SHAPE_TYPES.DOT4_HOLLOW,
    width: DEFAULTS.DOT4_HOLLOW.WIDTH,
    height: DEFAULTS.DOT4_HOLLOW.HEIGHT,
    fill: DEFAULTS.DOT4_HOLLOW.FILL,
    stroke: DEFAULTS.DOT4_HOLLOW.STROKE,
    strokeWidth: DEFAULTS.DOT4_HOLLOW.STROKE_WIDTH,
    dash: DEFAULTS.DOT4_HOLLOW.DASH,
    radius: DEFAULTS.DOT_HOLLOW.RADIUS,

    offsetX: DEFAULTS.DOT4_HOLLOW.WIDTH / 2,
    offsetY: DEFAULTS.DOT4_HOLLOW.HEIGHT / 2,
  },

  [SHAPE_TYPES.DOT4_FILLED]: {
    type: SHAPE_TYPES.DOT4_FILLED,
    width: DEFAULTS.DOT4_FILLED.WIDTH,
    height: DEFAULTS.DOT4_FILLED.HEIGHT,
    fill: DEFAULTS.DOT4_FILLED.FILL,
    stroke: DEFAULTS.DOT4_FILLED.STROKE,
    strokeWidth: DEFAULTS.DOT4_FILLED.STROKE_WIDTH,
    dash: DEFAULTS.DOT4_FILLED.DASH,
    radius: DEFAULTS.DOT_HOLLOW.RADIUS,

    offsetX: DEFAULTS.DOT4_FILLED.WIDTH / 2,
    offsetY: DEFAULTS.DOT4_FILLED.HEIGHT / 2,

  },

  [SHAPE_TYPES.DOT_SQUARE_HOLLOW]: {
    type: SHAPE_TYPES.DOT_SQUARE_HOLLOW,
    width: DEFAULTS.DOT_SQUARE_HOLLOW.WIDTH,
    height: DEFAULTS.DOT_SQUARE_HOLLOW.HEIGHT,
    fill: DEFAULTS.DOT_SQUARE_HOLLOW.FILL,
    stroke: DEFAULTS.DOT_SQUARE_HOLLOW.STROKE,
    strokeWidth: DEFAULTS.DOT_SQUARE_HOLLOW.STROKE_WIDTH,
    dash: DEFAULTS.DOT_SQUARE_HOLLOW.DASH,

    offsetX: DEFAULTS.DOT_SQUARE_HOLLOW.WIDTH / 2,
    offsetY: DEFAULTS.DOT_SQUARE_HOLLOW.HEIGHT / 2,
  },

  [SHAPE_TYPES.DOT_SQUARE_FILLED]: {
    type: SHAPE_TYPES.DOT_SQUARE_FILLED,
    width: DEFAULTS.DOT_SQUARE_FILLED.WIDTH,
    height: DEFAULTS.DOT_SQUARE_FILLED.HEIGHT,
    fill: DEFAULTS.DOT_SQUARE_FILLED.FILL,
    stroke: DEFAULTS.DOT_SQUARE_FILLED.STROKE,
    strokeWidth: DEFAULTS.DOT_SQUARE_FILLED.STROKE_WIDTH,
    dash: DEFAULTS.DOT_SQUARE_FILLED.DASH,

    offsetX: DEFAULTS.DOT_SQUARE_FILLED.WIDTH / 2,
    offsetY: DEFAULTS.DOT_SQUARE_FILLED.HEIGHT / 2,

  },

  [SHAPE_TYPES.DOT4_SQUARE_HOLLOW]: {
    type: SHAPE_TYPES.DOT4_SQUARE_HOLLOW,
    width: DEFAULTS.DOT4_SQUARE_HOLLOW.WIDTH,
    height: DEFAULTS.DOT4_SQUARE_HOLLOW.HEIGHT,
    fill: DEFAULTS.DOT4_SQUARE_HOLLOW.FILL,
    stroke: DEFAULTS.DOT4_SQUARE_HOLLOW.STROKE,
    strokeWidth: DEFAULTS.DOT4_SQUARE_HOLLOW.STROKE_WIDTH,
    dash: DEFAULTS.DOT4_SQUARE_HOLLOW.DASH,

    offsetX: DEFAULTS.DOT4_SQUARE_HOLLOW.WIDTH / 2,
    offsetY: DEFAULTS.DOT4_SQUARE_HOLLOW.HEIGHT / 2,
  },

  [SHAPE_TYPES.DOT4_SQUARE_FILLED]: {
    type: SHAPE_TYPES.DOT4_SQUARE_FILLED,
    width: DEFAULTS.DOT4_SQUARE_FILLED.WIDTH,
    height: DEFAULTS.DOT4_SQUARE_FILLED.HEIGHT,
    fill: DEFAULTS.DOT4_SQUARE_FILLED.FILL,
    stroke: DEFAULTS.DOT4_SQUARE_FILLED.STROKE,
    strokeWidth: DEFAULTS.DOT4_SQUARE_FILLED.STROKE_WIDTH,
    dash: DEFAULTS.DOT4_SQUARE_FILLED.DASH,

    offsetX: DEFAULTS.DOT4_SQUARE_FILLED.WIDTH / 2,
    offsetY: DEFAULTS.DOT4_SQUARE_FILLED.HEIGHT / 2,

  },
}
